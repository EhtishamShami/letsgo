apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.shami.daniyalproject"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "baseURL", "\"http://124.109.32.134:8080/face-recog-apis/\""
        multiDexEnabled true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "android.arch.lifecycle:extensions:1.1.0"
    // alternatively, just ViewModel
    implementation "android.arch.lifecycle:viewmodel:1.1.0"
    // alternatively, just LiveData
    implementation "android.arch.lifecycle:livedata:1.1.0"

    annotationProcessor "android.arch.lifecycle:compiler:1.1.0"

    // Room (use 1.1.0-alpha3 for latest alpha)
    implementation "android.arch.persistence.room:runtime:1.0.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    // Paging
    implementation "android.arch.paging:runtime:1.0.0-alpha6"

    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:1.1.0"

    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:1.0.0"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibrary"
    implementation "com.android.support:design:$rootProject.supportLibrary"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2Version"
    implementation "com.squareup.moshi:moshi-kotlin:$rootProject.moshiKotlinVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofit2Version"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"

    // Dagger 2 Dependency
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion" // If you're using classes in dagger.android
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion" // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    implementation "io.vrinda.kotlinpermissions:kotlinpermissions:$rootProject.kotlinpermission"

    implementation "com.google.android.gms:play-services-maps:$rootProject.mapsVersion"
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.firebase:firebase-database:$rootProject.firebaseVersion"
    implementation "com.google.android.gms:play-services-location:$rootProject.mapsVersion"
    kapt "com.android.databinding:compiler:$android_plugin_version"

    implementation "org.jetbrains.anko:anko-common:$rootProject.ankoVersion"
}
apply plugin: 'com.google.gms.google-services'
kapt {
    generateStubs = true
}
